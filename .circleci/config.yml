version: 2.1
jobs:
  pytest:
    resource_class: xlarge
    docker:
      - image: python:3.10-slim
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install uv
            uv venv --python 3.10
      - run:
          name: Run nbdev tests
          command: |
            source .venv/bin/activate
            uv pip install -e ".[dev,polars]"
            pytest
  test-model-performance:
    parameters:
      hierarchy:
        type: string
        default: "strict"
      forecast_type:
        type: string
        default: "point"
      engine:
        type: string
        default: "pandas"
    resource_class: large
    docker:
      - image: python:3.10-slim
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install uv
            uv venv --python 3.10
      - run:
          name: Run model performance tests
          command: |
            source .venv/bin/activate
            uv pip install ".[dev,polars]"
            cd ./action_files/test_models/
            uv pip install -r requirements.txt
            python -m src.models << parameters.hierarchy >> << parameters.forecast_type >> << parameters.engine >>
            python -m src.evaluation << parameters.forecast_type >>
            cd ../../
      - store_artifacts:
          path: ./action_files/test_models/data/evaluation.csv
          destination: evaluation.csv
  test-model-performance-temporal:
    resource_class: large
    docker:
      - image: python:3.10-slim
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install uv
            uv venv --python 3.10
      - run:
          name: Run model performance tests
          command: |
            source .venv/bin/activate
            uv pip install ".[dev,polars]"
            cd ./action_files/test_models/
            uv pip install -r requirements.txt
            python -m src.models_temporal
            python -m src.evaluation_temporal
            cd ../../
      - store_artifacts:
          path: ./action_files/test_models/data/evaluation.csv
          destination: evaluation.csv
workflows:
  sample:
    jobs:
      - pytest
      - test-model-performance:
          matrix:
            parameters:
              hierarchy: ["strict", "non-strict"]
              forecast_type: ["point", "probabilistic"]
              engine: ["pandas"]
      - test-model-performance-temporal